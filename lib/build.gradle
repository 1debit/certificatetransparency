apply plugin: 'java-library'
apply plugin: 'kotlin'

apply plugin: 'com.google.protobuf'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

sourceSets {
    main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.56'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.56'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.4.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
}

protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}
